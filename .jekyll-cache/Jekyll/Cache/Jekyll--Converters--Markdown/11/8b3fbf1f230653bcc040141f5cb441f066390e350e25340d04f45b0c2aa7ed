I"á	<p>This post details how to get started with a BeagleBone Green (BBG) microSD card and
program it via GPIO.</p>

<h2 id="1-getting-started">1. Getting Started</h2>
<p>Instructions for getting started with the BBG are available at at 
at <a href="https://beagleboard.org/getting-started">https://beagleboard.org/getting-started</a>. This involves downloading
the Debian Linux image and writing it to a microSD card (make sure you
use the Debian image for the BBG). My version was:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Buster IoT (without graphical desktop) for BeagleBone and PocketBeagle via microSD card
AM3358 Debian 10.3 2020-04-06 4GB SD IoT image for PocketBeagle, BeagleBone, BeagleBone Black, BeagleBone Black Wireless, BeagleBone Black Industrial, BeagleBone Blue, SeeedStudio BeagleBone Green, SeeedStudio BeagleBone Green Wireless, SanCloud BeagleBone Enhanced, Arrow BeagleBone Black Industrial and Mentorel BeagleBone uSomIQ - more info - sha256sum: 22448ba28d0d58e25e875aac3b4e91eaef82e2d11c9d2c43d948ed60708f7434
</code></pre></div></div>

<p>The driver for networking via USB didnâ€™t work with the latest version
of MacOS (Big Sur 11.2.1) but the BBG was able to use DNS over Ethernet
to connect to my network.  One can then <code class="language-plaintext highlighter-rouge">ssh debian@beaglebone.local</code>
to access.</p>

<h2 id="2-gpio">2. GPIO</h2>
<p>As mentioned in my <a href="/2021/QEMU-ARM-Linux-gpio/">earlier post</a>, libgpiod
is the standard way to use GPIO under Linux. To use it on the BBG, one must
first download the library and include files.</p>
<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>libgpiod-dev
</code></pre></div></div>

<p>You can check everything is working by turning on the D5 LED for 10 seconds 
using</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>debian@beaglebone:~$ gpioset -m time -s 10 gpiochip1 24=1
</code></pre></div></div>
<p>and turning it off for 10 seconds</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>debian@beaglebone:~$ gpioset -m time -s 10 gpiochip1 24=0
</code></pre></div></div>
<p>Note that after <code class="language-plaintext highlighter-rouge">gpioset</code> exits, the data of the output is undefined.</p>
:ET