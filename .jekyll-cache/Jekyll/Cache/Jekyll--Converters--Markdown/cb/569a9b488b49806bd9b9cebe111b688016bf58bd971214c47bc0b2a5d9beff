I"<p>This post describes how to emulate an ARM 64 bit (aarch64) or ARM hard float 32 bit (armhf) processor using using <code class="language-plaintext highlighter-rouge">qemu</code> and install Debian Linux on the emulator. Actually I did the 32 bit one first so the process is a little more streamlined for 64 bit.</p>

<p>I used Ubuntu 18.04.5 but any Debian/Ubuntu distribution can be used with minor changes. Note that this didn‚Äôt work under VirtualBox but a USB-bootable Ubuntu distribution should be fine.</p>

<h1 id="for-64-bit-aarch64">For (64-bit) aarch64</h1>
<p>I used the lastest version of <a href="https://github.com/qemu/qemu">qemu</a> from github
and created a 32G qcow2 image (there isn‚Äôt any disk space advantage to specifying 16G but it is a pain if it runs out).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ qemu-system-aarch64 --version
QEMU emulator version 5.2.92 (v6.0.0-rc2)
Copyright (c) 2003-2021 Fabrice Bellard and the QEMU Project developers
$ qemu-img create -f qcow2 debian-3607-aarch64.qcow2 32G 
$ wget http://debian.mirror.digitalpacific.com.au/debian-cd/10.9.0/arm64/iso-cd/debian-10.9.0-arm64-xfce-CD-1.iso
$ wget http://ftp.au.debian.org/debian/dists/buster/main/installer-arm64/20190702/images/cdrom/initrd.gz
$ wget http://ftp.au.debian.org/debian/dists/buster/main/installer-arm64/20190702/images/cdrom/vmlinuz
$ qemu-system-aarch64 -M virt -cpu cortex-a53 -m 1G     -initrd initrd.img-4.19.0-16-arm64     -kernel vmlinuz-4.19.0-16-arm64    -append "root=/dev/sda2 console=ttyAMA0"     -global virtio-blk-device.scsi=off     -device virtio-scsi-device,id=scsi     -drive file=debian-3607-aarch64.qcow2,id=rootimg,cache=unsafe,if=none     -device scsi-hd,drive=rootimg  -net user,hostfwd=tcp::10022-:22 -net nic    -nographic -device intel-hda -device hda-duplex
</code></pre></div></div>
<ul>
  <li>No common CD-ROM drive was detected: Manually select to use /dev/vdb</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ virt-copy-out -a debian-3607-aarch64.qcow2 /boot/vmlinuz-4.19.0-16-arm64 /boot/initrd.img-4.19.0-16-arm64 .
$ qemu-system-aarch64 -M virt -cpu cortex-a53 -m 1G -initrd initrd.img-4.19.0-16-arm64 -kernel vmlinuz-4.19.0-16-arm64 \
   -append "root=/dev/sda2 console=ttyAMA0" -global virtio-blk-device.scsi=off -device virtio-scsi-device,id=scsi \
   -drive file=debian-3607-aarch64.qcow2,id=rootimg,cache=unsafe,if=none -device scsi-hd,drive=rootimg \
   -net user,hostfwd=tcp::10022-:22 -net nic -nographic -device intel-hda -device hda-duplex
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># apt update
# apt install sudo build-essential libasound2 pulseaudio pavucontrol


# For (32-bit) armhf

## Install Debian on qemu-system-arm
Install qemu.
</code></pre></div></div>
<p>sudo apt update
sudo apt upgrade
mkdir qemu; cd qemu
sudo apt install qemu-system-arm</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
Download [initrd.gz](http://ftp.debian.org/debian/dists/buster/main/installer-armhf/20190702/images/netboot/initrd.gz), [vmlinuz](http://ftp.debian.org/debian/dists/buster/main/installer-armhf/20190702/images/netboot/vmlinuz) and
[debian-10.9.0-armhf-netinst.iso](http://debian.mirror.digitalpacific.com.au/debian-cd/10.9.0/armhf/iso-cd/debian-10.9.0-armhf-netinst.iso)
(alternatively
[debian-10.9.0-armhf-xfce-CD-1.iso](http://debian.mirror.digitalpacific.com.au/debian-cd/10.9.0/armhf/iso-cd/debian-10.9.0-armhf-xfce-CD-1.iso)).
</code></pre></div></div>
<p>wget http://ftp.debian.org/debian/dists/buster/main/installer-armhf/20190702/images/netboot/initrd.gz
wget http://ftp.debian.org/debian/dists/buster/main/installer-armhf/20190702/images/netboot/vmlinuz
wget http://debian.mirror.digitalpacific.com.au/debian-cd/10.9.0/armhf/iso-cd/debian-10.9.0-armhf-netinst.iso</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
</code></pre></div></div>
<p>qemu-img create -f qcow2 debian-3607.qcow2 16G # 8G will also work but not leave enough disk space for other things
qemu-system-arm -M virt -kernel ./vmlinuz -initrd ./initrd.gz -hda debian-3607.qcow2 -nographic -m 1024M -append ‚Äúconsole=ttyAMA0‚Äù -drive file=debian-10.9.0-armhf-netinst.iso,id=cdrom,if=none,media=cdrom -device virtio-scsi-device -device scsi-cd,drive=cdrom</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
Use all of the defaults for the Debian installer.
 * I used "elec3607" for all user names and passwords.
 * For partitioning select "Guided - use entire disk". Note that this chooses /dev/vda2 for / (we will use this later).
 * If you get a "Failed to install the base system" message, try a second time from the menu.
 * Select linux-image-armmp-lpae for the kernel.
 * Select targeted for initrd **(This was a mistake, choose generic)**
 * For software to install, just choose "SSH server" and "standard system utilities" (the default).
 * You will receive the message that GRUB installation failed. We will fix this later.
 * Exit ```qemu``` with "control-A x".

Extract the kernel and initrd from the disk image.
</code></pre></div></div>
<p>sudo apt-get install libguestfs-tools
virt-ls -a debian-3607.qcow2 /boot/
virt-copy-out -a debian-3607.qcow2 /boot/vmlinuz-4.19.0-16-armmp-lpae /boot/initrd.img-4.19.0-16-armmp-lpae .</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
Now you can run your Debian-Arm Linux from either Linux:
</code></pre></div></div>
<p>qemu-system-arm -M virt -kernel vmlinuz-4.19.0-16-armmp-lpae -initrd initrd.img-4.19.0-16-armmp-lpae <br />
-append ‚Äòroot=/dev/vda2‚Äô -drive if=virtio,file=debian-3607-lab4sol.qcow2,format=qcow2,id=hd <br />
-nographic -net user,hostfwd=tcp::10022-:22 -net nic</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
## Install sudo and put ELEC3607 in the sudo group
Login as ```elec3607``` (password is ```elec3607```) and execute the following commands.
Note that the basic distribution of Debian does not include sudo.
</code></pre></div></div>
<p>elec3607@debian:~$ su -
Password: 
root@debian:~# apt install sudo 
Reading package lists‚Ä¶ Done
‚Ä¶
usermod -G sudo elec3607
shutdown now</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
## Install everything else
The complete list of Debian packages is available [here](https://www.debian.org/distrib/packages).
For example to install the alsa and pulseaudio packages.

</code></pre></div></div>
<p>sudo apt install libasound2 libasound2-plugins libasound2-doc alsa-utils pulseaudio
```</p>
:ET